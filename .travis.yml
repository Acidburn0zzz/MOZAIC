branches:
  only: 
    - development
    - /^build-.*$/

env:
  gobal: 
     - ELECTRON_CACHE=$HOME/.cache/electron
     - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

matrix:
  include:
  - os: linux
    language: rust
    rust: nightly
    node_js: '9'
    env: 
     - OS_TARGET="linux"
  - os: osx
    osx_image: xcode9.2
    language: rust
    node_js: '9'
    rust: nightly
    env:
      - OS_TARGET="mac"


cache:
  yarn: true
  directories:
    - gameserver/target/
    - client/planetwars/node_modules
    - $HOME/.cargo/
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_install:
  # Repo for Yarn
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install yarn --without-node
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    else
      sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
      echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      sudo apt-get update -qq
      sudo apt-get install -y -qq yarn=1.6.0-1
    fi
before_script:
  - git lfs pull

script:
  # Build Rust gameserver crate
  - cd gameserver
  - cargo build --release
  - cd $TRAVIS_BUILD_DIR
  # Copy binary to electron client
  - cp gameserver/target/release/mozaic_bot_driver planetwars/client/bin/mozaic_bot_driver
  # Build js mozaic-client package (network interface)
  - cd client
  - yarn install
  - yarn run build
  - cd $TRAVIS_BUILD_DIR
  # Build js planetwars-match-log package
  - cd planetwars/match-log
  - yarn install
  - yarn build
  - cd $TRAVIS_BUILD_DIR
  # Build js planetwars-visualizer package
  - cd planetwars/visualizer
  - yarn install
  - yarn build
  - cd $TRAVIS_BUILD_DIR
  # Build js electron client package and package binary
  - cd planetwars/client
  - yarn install
  - yarn run package-$OS_TARGET