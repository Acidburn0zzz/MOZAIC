syntax = "proto3";

package mozaic.protocol;

message ClientConnect {
    bytes match_uuid = 1;
    uint32 client_id = 2;
}

message ServerControlConnect {}

message GameserverConnect {
    oneof connect {
        ClientConnect client = 1;
        ServerControlConnect server_control = 2;
    }
}

// HANDSHAKE

message SignedMessage {
    bytes data = 1;
    bytes signature = 2;
}

message ConnectionRequest {
    // TODO: maybe we want to include some headers here


    bytes client_nonce = 1;

    // This message should identify the connecting client with the
    // server.
    bytes message = 2;
}

message ChallengeResponse {
    bytes server_nonce = 1;
    bytes kx_client_pk = 2;
}

message HandshakeServerMessage {
    bytes client_nonce = 1;
    oneof payload {
        ServerChallenge challenge = 2;
        ConnectionAccepted connection_accepted = 3;
        ConnectionRefused connection_refused = 4;
    }
}

message ServerChallenge {
    bytes server_nonce = 1;
}

message ConnectionAccepted { }

message ConnectionRefused {
    string message = 1;
}

message Frame {
    uint32 channel_num = 1;
    bytes data = 2;
}

message Packet {
    uint32 seq_num = 1;
    uint32 ack_num = 2;
    oneof payload {
        Request request = 3;
        Response response = 4;
        CloseRequest close_request = 5;
    }
}

message Request {
    uint32 type_id = 1; 
    bytes data = 2;
}

message Response {
    uint32 request_seq_num = 1;
    uint32 type_id = 2;
    bytes data = 3;
}

message CloseRequest {
    // for future use
}
